<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Project</title>
    <link rel="icon" href="images/DSK-JF-drak-transparent-logo.png" />
    <!-- font awesome file -->
    <link rel="stylesheet"
        href="https://cdnjs.cloudflare.com/ajax/libs/material-design-icons/3.0.1/iconfont/material-icons.min.css" />
    <!-- main css file -->
    <link rel="stylesheet" href="/css/chat.css" />
</head>

<body>

    <section class="chat">
        <button class="chat-btn">
            <i class="material-icons"> comment </i>
        </button>
        <div class="chat-popup">
            <div class="chat-area">

            </div>
            <div class="input-area">
                <input type="text" />
                <button class="submit"><i class="material-icons"> send</i></button>
            </div>
        </div>

    </section>

    <script>
        const apiKey = "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";
        async function sendMessage(message) {
            const response = await fetch(
                "https://api.openai.com/v1/chat/completions", //Api endpoint url
                {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: `Bearer ${apiKey}`, //This header is used for authentication and authorizing access to the ChatGPT API.
                    },
                    body: JSON.stringify({
                        model: "gpt-3.5-turbo",  // or any other model you prefer
                        messages: [
                            { role: "system", content: "You are" }, //This is the initial system message to set the context for the conversation
                            { role: "user", content: message },
                        ],
                    }),
                }
            );
            const data = await response.json();
            return data.choices[0].message.content;
        }

        //start chat
        const popup = document.querySelector(".chat-popup");
        const chatBtn = document.querySelector(".chat-btn");
        const submitBtn = document.querySelector(".submit");
        const chatArea = document.querySelector(".chat-area");
        const inputElm = document.querySelector(".input-area input");

        chatBtn.addEventListener("click", () => {
            popup.classList.toggle("show");
        });

        submitBtn.addEventListener("click", async () => {
            let userInput = inputElm.value;

            let temp = `<div class="out-msg">
                <span class="my-msg">${userInput}</span>
                <img src="../images/user.png" class="avatar">
                </div>`;

            chatArea.insertAdjacentHTML("beforeend", temp);
            inputElm.value = "";

            let chatGptMessage = await sendMessage(userInput);
            let temp2 = `<div class="income-msg">
                <img src="/img/apple.jpg" class="avatar">
                <span class="msg">${chatGptMessage}</span>
                </div>`;

            chatArea.insertAdjacentHTML("beforeend", temp2);

        });
//end chat
    </script>
</body>

</html>