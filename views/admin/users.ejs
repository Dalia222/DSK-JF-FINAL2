<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!-- font-awesome -->
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
      integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    <link rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/material-design-icons/3.0.1/iconfont/material-icons.min.css" />
    <!-- toastify -->
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css"
    />
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <!-- style sheets -->
    <link rel="stylesheet" href="/css/general.css" />
    <link rel="stylesheet" href="/css/admin/nav.css" />
    <link rel="stylesheet" href="/css/admin/users.css" />
    <link rel="stylesheet" href="/css/chatGPT.css" />
    <title>Admin-Users</title>
  </head>

  <body>
    <%- include("./nav.ejs") %>
    <main>
      <header>
        <h1>Users</h1>
        <button class="new-user btn" id="newUserBtn">+ New User</button>
        <section class="add-new-user" id="addNewUser">
          <p style="color: red" id="error"></p>
          <form id="form">
            <div>
              <label for="firstName">First Name : </label>
              <input type="text" id="firstName" name="firstName" />
            </div>
            <div>
              <label for="lastName">Last Name : </label>
              <input type="text" id="lastName" name="lastName" />
            </div>
            <div>
              <label for="username">Username : </label>
              <input type="text" id="username" name="username" />
            </div>
            <div>
              <label for="email">Email : </label>
              <input type="text" id="email" name="email" />
            </div>
            <div>
              <label for="password">Password : </label>
              <input type="password" id="password" name="password" />
            </div>
            <div class="role">
              <div>
                <input type="radio" id="student" name="role" value="Student" />
                <label for="student">Student</label>
              </div>
              <div>
                <input
                  checked
                  type="radio"
                  id="instructor"
                  name="role"
                  value="Instructor"
                />
                <label for="instructor">Instructor</label><br />
              </div>
              <div>
                <input
                  type="radio"
                  id="teachingAssistant"
                  name="role"
                  value="Teaching Assistant"
                />
                <label for="teachingAssistant">Teaching Assistant</label>
              </div>
            </div>
            <div>
              <button class="btn" id="submit">Submit</button>
            </div>
          </form>
        </section>
      </header>
      <section>
        <section>
          <% if (users.length) { %>
          <table>
            <tr>
              <th colspan="6">
                <div class="search">
                  <i class="fas fa-search"></i>
                  <input type="text" id="search" placeholder="Search by first name">
                </div>
              </th>
              <th>
                <button class="filter">
                  <i class="fa-solid fa-filter"></i>
                </button>
                <div class="filter-options" style="display: none;">
                  <label><input type="checkbox" value="student">Students</label>
                  <label><input type="checkbox" value="instructor">Instructors</label>
                  <label><input type="checkbox" value="teachingAssistant">Teaching Assistants</label>
                </div>
              </th>
            </tr>
      <% users.forEach(item => {
        if (item.role !== 'admin') { %>
      <tr class="user">
        <td>
          <input type="checkbox" class="checkbox" />
          <div class="right-and-wrong" style="display: none">
            <i class="fa-solid fa-check" style="color: green; cursor: pointer"></i>
            <i class="fa-solid fa-xmark" style="color: red; cursor: pointer"></i>
          </div>
        </td>
        <td>
          <div class="container">
            <img src="<%= item.profilePic %>" alt="profile picture" />
          </div>
        </td>
        <td><%= item.firstName %> <%= item.lastName %></td>
        <td><%= item.role %></td>
        <td><%= item.email %></td>
        <td class="<%= item.isBanned ? 'banned' : 'active' %>">
          <span><%- item.isBanned ? 'Banned' : 'Active' %></span>
        </td>
        <td style="position: relative">
          <button class="dots btn">
            <i class="fa-solid fa-ellipsis-vertical"></i>
          </button>
          <div class="options">
            <ul data-userid="<%= item._id %>">
              <li>
                <button><i class="fa-solid fa-message"></i> Message</button>
              </li>
              <li>
                <button class="editbtn">
                  <i class="fa-solid fa-pencil edit"></i> Edit
                </button>
              </li>
              <li>
                <button class="removebtn">
                  <i class="fa-solid fa-trash delete"></i>
                  Remove
                </button>
              </li>
              <li>
                <button class="banbtn">
                  <i class="fa-solid fa-ban ban"></i>
                  <span><%- item.isBanned ? 'Unban' : 'Ban' %></span>
                </button>
              </li>
            </ul>
          </div>
        </td>
      </tr>
      <% }
      }); %>
    </table>        
      </section>
      <% } else { %>
      <p class="no-data">No data found!</p>
      <% } %>
      <div class="pagination">
        <ul>
          <% const number=Math.ceil(usersLength / usersPerPage) || 0 %>
          <%for(let i=0; i < number; i++) { %>
          <li><a value="<%=i+1 %>" href="users?p=<%=i%>"> <%=i+1 %> </a></li>
          <% } %>
        </ul>
      </div>
      <%- include("../chatGPT.ejs") %>
    </main>

    <!-- add new user button  -->
    <script>
      const menu = document.getElementById("addNewUser");
      const newUserBtn = document.getElementById("newUserBtn");

      newUserBtn.addEventListener("click", () => {
        menu.classList.toggle("activee");
      });

      document.addEventListener("dblclick", function (e) {
        if (
          menu.classList.contains("activee") &&
          !menu.contains(e.target) &&
          !newUserBtn.contains(e.target)
        ) {
          menu.classList.remove("activee");
          document.getElementById("form").reset();
        }
      });
    </script>


      <script>
  const searchInput = document.getElementById('search');
  const userRows = document.getElementsByClassName('user');
  const filterButton = document.querySelector('.filter');
  const filterOptions = document.querySelector('.filter-options');

  // Event listener for search input
  searchInput.addEventListener('input', function() {
    const searchQuery = this.value.toLowerCase();

    for (let i = 0; i < userRows.length; i++) {
      const firstName = userRows[i].getElementsByTagName('td')[2].textContent.toLowerCase();

      if (firstName.includes(searchQuery)) {
        userRows[i].style.display = '';
      } else {
        userRows[i].style.display = 'none';
      }
    }
  });

  // Event listener for filter button
  filterButton.addEventListener('click', function() {
    filterOptions.style.display = filterOptions.style.display === 'block' ? 'none' : 'block';
  });

  // Event listener for filter options
  filterOptions.addEventListener('change', function() {
    const selectedRoles = Array.from(this.querySelectorAll('input[type="checkbox"]:checked'))
      .map(checkbox => checkbox.value);

    for (let i = 0; i < userRows.length; i++) {
      const role = userRows[i].getElementsByTagName('td')[3].textContent.toLowerCase();

      if (selectedRoles.length === 0 || selectedRoles.includes(role)) {
        userRows[i].style.display = '';
      } else {
        userRows[i].style.display = 'none';
      }
    }
  });

</script>


  
    <!-- create new user  -->
    <script type="module">
      import { validateForm } from "/js/formValidation.js";
      const form = document.getElementById("form");
      const error = document.getElementById("error");

      form.addEventListener("submit", async (e) => {
        e.preventDefault();
        error.style.color = "red";
        const errorMsg = validateForm(form);
        if (errorMsg) return (error.innerHTML = errorMsg);

        try {
          const res = await fetch("/signup", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
              role: document.querySelector('input[name="role"]:checked').value,
              firstName: document.getElementById("firstName").value,
              lastName: document.getElementById("lastName").value,
              username: document.getElementById("username").value,
              email: document.getElementById("email").value,
              password: document.getElementById("password").value,
              gpa: 0,
              createdByAdmin: 1,
            }),
          });

          const data = await res.json();

          if (data.errMsg) error.innerHTML = data.errMsg;
          else if (data.user) {
            error.style.color = "green";
            error.innerHTML = "Added";
            location.reload();
          }
        } catch (err) {
          console.log(err);
        }
      });
    </script>
    <!-- dots -->
    <script>
      const dots = document.getElementsByClassName("dots");

      Array.from(dots).forEach((dotaya) => {
        dotaya.addEventListener("click", (e) => {
          const options = dotaya.nextElementSibling;
          options.classList.toggle("showList");
        });
      });

      document.addEventListener("click", (e) => {
        Array.from(dots).forEach((dotaya) => {
          if (!dotaya.contains(e.target)) {
            const options = dotaya.nextElementSibling;
            options.classList.remove("showList");
          }
        });
      });
    </script>
    <!-- ban btn  -->
    <script>
      const banbtn = document.getElementsByClassName("banbtn");

      Array.from(banbtn).forEach((b) => {
        b.addEventListener("click", async (e) => {
          const userid = b.parentElement.parentElement.dataset.userid;
          try {
            const res = await fetch(`/admin/users/ban/${userid}`, {
              method: "PUT",
            });
            const data = await res.json();
            if (data.msg) location.reload();
          } catch (err) {
            console.log(err);
          }
        });
      });
    </script>
    <!-- remove btn  -->
    <script>
      const removebtn = document.getElementsByClassName("removebtn");

      Array.from(removebtn).forEach((b) => {
        b.addEventListener("click", async (e) => {
          const userid = b.parentElement.parentElement.dataset.userid;
          try {
            const res = await fetch(`/admin/users/delete/${userid}`, {
              method: "DELETE",
            });
            const data = await res.json();
            if (data.msg) {
              Toastify({
                text: "removed Successfully",
                duration: 3000,
                gravity: "top",
                close: false,
                backgroundColor: "red",
              }).showToast();
              location.reload();
            }
          } catch (err) {
            console.log(err);
          }
        });
      });
    </script>
    <!-- edit btn  -->
    <script>
      const Xs = document.getElementsByClassName("fa-xmark");
      Array.from(Xs).forEach((x) => {
        x.addEventListener("click", () => {
          location.reload();
        });
      });

      const Cs = document.getElementsByClassName("fa-check");
      Array.from(Cs).forEach((c) => {
        c.addEventListener("click", () => {
          const user = c.parentElement.parentElement.parentElement;
          const newEmail = user.querySelector([]);
          console.log(newEmail);
        });
      });

      const editbtn = document.getElementsByClassName("editbtn");

      Array.from(editbtn).forEach((b) => {
        b.addEventListener("click", async (e) => {
          const userid = b.parentElement.parentElement.dataset.userid;
          const user =
            b.parentElement.parentElement.parentElement.parentElement
              .parentElement;

          user.querySelector(".right-and-wrong").style.display = "block";
          user.querySelector(".checkbox").style.display = "none";
          user.querySelectorAll("input").forEach((i) => {
            i.classList.add("edite-input");
            i.readOnly = false;
          });
        });
      });
    </script>
  </body>
</html>
