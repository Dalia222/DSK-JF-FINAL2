<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!-- font-awesome -->
    <script src="https://kit.fontawesome.com/1c2c2462bf.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css"> 
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
      integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    <link rel="stylesheet" href="/css/registration/signup.css" />
    <script src="https://www.google.com/recaptcha/api.js" async defer></script>
    <title>Sign up</title>
  </head>
  <body>
    <main>
      <form method="post" id="form" action="/signup/post">
        <div class="title">
          <h1>Creat Account</h1>
          <h2>Sign up!</h2>
        </div>
        <div class="names">
          <div>
            <label for="firstName">First Name : </label>
            <input type="text" id="firstName" name="firstName" />
          </div>
          <div>
            <label for="lastName">Last Name : </label>
            <input type="text" id="lastName" name="lastName" />
          </div>
        </div>
        <div>
          <label for="username">Username : </label>
          <input type="text" id="username" name="username" />
        </div>
        <div>
          <label for="email">Email : </label>
          <input type="text" id="email" name="email" />
        </div>
        <div class="password-input">
          <label for="password">Password : </label>
          <input type="password" id="password" name="Password" />
          <i class="fa-regular fa-eye eye" id="eye"></i>
          <i class="fa-regular fa-eye-slash eye" id="closedEye"></i>
        </div>

        <div id="popover-password">
          <p><span id="result"></span></p>
          <div class="progress">
              <div id="password-strength" 
                  class="progress-bar" 
                  role="progressbar" 
                  aria-valuenow="40" 
                  aria-valuemin="0" 
                  aria-valuemax="100" 
                  style="width:0%">
              </div>
          </div>         
          <div>
            <button id="generatePasswordIcon" onclick="generateRandomPassword()" >generate password</button>
           </div>
          <ul class="list-unstyled">
              <li class="">
                  <span class="low-upper-case">
                      <i class="fas fa-circle" aria-hidden="true"></i>
                      &nbsp;Lowercase &amp; Uppercase
                  </span>
              </li>
              <li class="">
                  <span class="one-number">
                      <i class="fas fa-circle" aria-hidden="true"></i>
                      &nbsp;Number (0-9)
                  </span> 
              </li>
              <li class="">
                  <span class="one-special-char">
                      <i class="fas fa-circle" aria-hidden="true"></i>
                      &nbsp;Special Character (!@#$%^&*)
                  </span>
              </li>
              <li class="">
                  <span class="eight-character">
                      <i class="fas fa-circle" aria-hidden="true"></i>
                      &nbsp;Atleast 8 Character
                  </span>
              </li>
          </ul> 
      </div>
       
        <p style="color: red" id="error"></p>
        <div class="recaptcha">
          <div
            class="g-recaptcha"
            data-sitekey="6Le6QD4mAAAAADV5VfC2F0joiBbaA0kDAr0PyEQN"
          ></div>
        </div>
        <div class="signinanchor">
          <a href="/login">Already have an account ? Sign in</a>
        </div>
        <div>
          <button type="submit">Sign up</button>
        </div>
      </form>
    </main>

    <!-- eye -->
    <script>
      const eye = document.getElementById("eye");
      const closedEye = document.getElementById("closedEye");
      const passwordInput = document.querySelector("#password");

      eye.addEventListener("click", function () {
        passwordInput.type = "text";
        eye.style.display = "none";
        closedEye.style.display = "block";
      });
      closedEye.addEventListener("click", function () {
        passwordInput.type = "password";
        closedEye.style.display = "none";
        eye.style.display = "block";
      });
    </script>

    <script type="module">
      import { validateForm } from "./js/formValidation.js";

      const form = document.getElementById("form");
      const error = document.getElementById("error");

      form.addEventListener("submit", async (e) => {
        e.preventDefault();
        const errorMsg = validateForm(form);
        if (errorMsg) error.innerHTML = errorMsg;
        else {
          try {
            const res = await fetch("/signup", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({
                role: "student",
                firstName: document.getElementById("firstName").value,
                lastName: document.getElementById("lastName").value,
                username: document.getElementById("username").value,
                email: document.getElementById("email").value,
                password: document.getElementById("password").value,
                gpa: 0,
              }),
            });
            const data = await res.json();
            if (data.errMsg) error.innerHTML = data.errMsg;
            else if (data.user)
              location.assign(`/${data.user.role}/${data.user._id}`);
          } catch (err) {
            console.log(err);
          }
        }
      });
    </script>
<!-- The password strength  -->
    <script>

let state = false;
let password = document.getElementById("password");
let passwordStrength = document.getElementById("password-strength");
let lowUpperCase = document.querySelector(".low-upper-case i");
let number = document.querySelector(".one-number i");
let specialChar = document.querySelector(".one-special-char i");
let eightChar = document.querySelector(".eight-character i");

password.addEventListener("keyup", function(){
    let pass = document.getElementById("password").value;
    checkStrength(pass);
});



function checkStrength(password) {
    let strength = 0;

    //If password contains both lower and uppercase characters
    if (password.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/)) {
        strength += 1;
        lowUpperCase.classList.remove('fa-circle');
        lowUpperCase.classList.add('fa-check');
    } else {
        lowUpperCase.classList.add('fa-circle');
        lowUpperCase.classList.remove('fa-check');
    }
    //If it has numbers and characters
    if (password.match(/([0-9])/)) {
        strength += 1;
        number.classList.remove('fa-circle');
        number.classList.add('fa-check');
    } else {
        number.classList.add('fa-circle');
        number.classList.remove('fa-check');
    }
    //If it has one special character
    if (password.match(/([!,%,&,@,#,$,^,*,?,_,~])/)) {
        strength += 1;
        specialChar.classList.remove('fa-circle');
        specialChar.classList.add('fa-check');
    } else {
        specialChar.classList.add('fa-circle');
        specialChar.classList.remove('fa-check');
    }
    //If password is greater than 7
    if (password.length > 7) {
        strength += 1;
        eightChar.classList.remove('fa-circle');
        eightChar.classList.add('fa-check');
    } else {
        eightChar.classList.add('fa-circle');
        eightChar.classList.remove('fa-check');   
    }

    // If value is less than 2
    if (strength ==0) {
        passwordStrength.classList.remove('progress-bar-warning');
        passwordStrength.classList.remove('progress-bar-success');
        passwordStrength.classList.add('progress-bar-danger');
        passwordStrength.style = 'width: 0%';
    }
    if (strength < 1) {
        passwordStrength.classList.remove('progress-bar-warning');
        passwordStrength.classList.remove('progress-bar-success');
        passwordStrength.classList.add('progress-bar-danger');
        passwordStrength.style = 'width: 20%';
    } else if (strength == 2) {
        passwordStrength.classList.remove('progress-bar-success');
        passwordStrength.classList.remove('progress-bar-danger');
        passwordStrength.classList.add('progress-bar-warning');
        passwordStrength.style = 'width: 40%';
      } else if (strength == 3) {
        passwordStrength.classList.remove('progress-bar-success');
        passwordStrength.classList.remove('progress-bar-danger');
        passwordStrength.classList.add('progress-bar-warning');
        passwordStrength.style = 'width: 70%';
    }
     else if (strength == 4) {
        passwordStrength.classList.remove('progress-bar-warning');
        passwordStrength.classList.remove('progress-bar-danger');
        passwordStrength.classList.add('progress-bar-success');
        passwordStrength.style = 'width: 100%';
    }
}
    </script>
    <!-- random passowrd generator -->
    <script>
    function generateRandomPassword() {
  const length = 8; // Minimum password length
  const charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+-='; // Characters to include in the password
  const uppercaseCharset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'; // Uppercase letters
  const lowercaseCharset = 'abcdefghijklmnopqrstuvwxyz'; // Lowercase letters
  const specialCharset = '!@#$%^&*()_+-='; // Special characters
  const numberCharset = '0123456789'; // Numbers

  let password = '';
  let hasUppercase = false;
  let hasLowercase = false;
  let hasSpecialChar = false;
  let hasNumber = false;

  // Generate at least one uppercase letter
  const randomUppercaseIndex = Math.floor(Math.random() * uppercaseCharset.length);
  password += uppercaseCharset[randomUppercaseIndex];
  hasUppercase = true;

  // Generate at least one lowercase letter
  const randomLowercaseIndex = Math.floor(Math.random() * lowercaseCharset.length);
  password += lowercaseCharset[randomLowercaseIndex];
  hasLowercase = true;

  // Generate at least one special character
  const randomSpecialCharIndex = Math.floor(Math.random() * specialCharset.length);
  password += specialCharset[randomSpecialCharIndex];
  hasSpecialChar = true;

  // Generate at least one number
  const randomNumberIndex = Math.floor(Math.random() * numberCharset.length);
  password += numberCharset[randomNumberIndex];
  hasNumber = true;

  // Generate remaining characters
  for (let i = 0; i < length - 4; i++) {
    const randomIndex = Math.floor(Math.random() * charset.length);
    password += charset[randomIndex];
  }

  // Shuffle the password to ensure the special character, uppercase, lowercase, and number are not in predictable positions
  password = shuffleString(password);

  // Check if password length is less than the minimum required length
  if (password.length < length) {
    // Regenerate the password with additional characters
    password = generateRandomPassword();
  }

  document.getElementById('password').value = password;
  
  const passwordInput = document.getElementById('password');
  passwordInput.value = password;
}

// Shuffle the characters in a string
function shuffleString(string) {
  const array = string.split('');
  for (let i = array.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]];
  }
  return array.join('');
}


    </script>
  </body>
</html>
